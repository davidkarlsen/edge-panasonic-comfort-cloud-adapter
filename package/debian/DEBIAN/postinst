#!/bin/bash
set -e

add_user_and_group() {
	if ! getent group thingsplex >/dev/null
	then
		echo -n "Adding group thingsplex..."
		addgroup --quiet \
			--system \
			thingsplex 2>/dev/null || true
		echo "...OK"
	fi

	if ! getent passwd panasonic-comfort-cloud >/dev/null
	then
		echo -n "Adding user panasonic-comfort-cloud..."
		adduser --quiet \
			--system \
			--ingroup thingsplex \
			--no-create-home \
			--disabled-password \
			panasonic-comfort-cloud 2>/dev/null || true
		echo "...OK"
	fi
}

create_dirs_and_files() {
	echo -n "Creating required directories and files..."
	mkdir -p /opt/thingsplex/panasonic-comfort-cloud/data
	mkdir -p /var/log/thingsplex/panasonic-comfort-cloud
	touch /var/log/thingsplex/panasonic-comfort-cloud/panasonic-comfort-cloud.log
	echo "...OK"
}

set_ownership() {
	echo -n "Set proper ownership and rights for files..."
	chown -R panasonic-comfort-cloud:thingsplex /opt/thingsplex/panasonic-comfort-cloud || true
	chown -R panasonic-comfort-cloud:thingsplex /var/log/thingsplex/panasonic-comfort-cloud || true
	chmod 644 /opt/thingsplex/panasonic-comfort-cloud/defaults/* || true
	chmod 644 /opt/thingsplex/panasonic-comfort-cloud/VERSION
	chmod 644 /var/log/thingsplex/panasonic-comfort-cloud/* || true
	echo "...OK"
}

configure_service() {
		echo -n "Configuring service..."
		systemctl enable panasonic-comfort-cloud.service > /dev/null || true
		systemctl --system daemon-reload >/dev/null || true
		systemctl start panasonic-comfort-cloud.service > /dev/null || true
		
		echo "...OK"
}

case "$1" in
	configure)
		add_user_and_group
		create_dirs_and_files
		set_ownership
		configure_service
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with an unknown argument \`$1'" >&2
		exit 1
	;;
esac

exit 0
